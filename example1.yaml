# This example provides a basic configuration and description based on the M5STACK components
# For further configuration you should visit the ESPHome docs https://esphome.io
# Every line starting with a # can be removed.

## BASIC CONFIGURATION
esphome:
  name: ac2
  friendly_name: Climate1
  #build_path: "../config/esphome/ac2_build"

# Select chipset and board configuration - in this case M5STACK
esp8266:
  board: esp12e

# [Optional] - Create web interface where you can control the AC from your web browser (without Home Assistant)
web_server:
  port: 80

# Enable logging
logger:
  baud_rate: 0
  level: debug
  #level: INFO
  logs:
    component: ERROR # Remove the "Your component takes to long to respond warning"


api:
  encryption:
    key: "U8ZCy8F050pbAD2CN+aQvKBdLO8jnyDmPm/sqGxktrQ="

ota:
  password: "0f59b700bacb71a95f4b8d22f86ff012"

# Setup your WiFi password
wifi:
  ssid: "Home"
  password: "025712494"
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "AC-wifi"
    password: "slwf01pro"



captive_portal:

# Specify pins used by the board to comunicate with RS485 board - in this case M5STACK
uart:
  tx_pin: TX
  rx_pin: RX 
  baud_rate: 9600 #SDM630 - 9600 , SDM120 - 4800 
  parity: EVEN
  
  #debug:
    #direction: BOTH
    #dummy_receiver: false
    #after:
      #delimiter: "\n"
    #sequence:
      #- lambda: UARTDebug::log_hex(direction, bytes, ' ');

## SAMSUNG AC CONFIGURATION

# Import custom component from GitHub
external_components:
  - source: github://yybd/esphome_samsung_ac@stable # use @main if you want the latest development (possibly unstable?)
    components: [samsung_ac]

# Configuration of AC component
samsung_ac:
  devices:
    - address: "00"
      #non_nasa_keepalive: true

    # Creates climate control in Home Assistant. A climate control combines multiple of the controls below (like temperature, mode etc.)
      climate:
        name: "Salon climate"
